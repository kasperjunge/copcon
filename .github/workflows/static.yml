# .github/workflows/static.yml

name: Build and Deploy Documentation

on:
  push:
    branches:
      - main  # Triggers on pushes to the main branch
  pull_request:
    branches:
      - main  # Triggers on pull requests targeting the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Specify your Python version

      # 3. Install `uv` and synchronize dependencies
      - name: Install `uv` and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync  # Synchronize dependencies as defined in pyproject.toml

      # 4. Build the documentation
      - name: Build Documentation
        run: |
          cd docs  # Navigate to your docs directory
          uv run make html  # Use `uv run` to execute the build command

      # 5. Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./docs/_build/html  # Path to the built documentation
          publish_branch: gh-pages
          keep_history: false  # Overwrite the `gh-pages` branch on each deployment
          allow_empty_commit: true  # Allow the action to succeed even if there are no changes

      # 6. Remove Built Docs from Repository
      - name: Remove Built Docs from Repository
        if: always()  # Ensure this step runs even if previous steps fail
        run: |
          git rm -r --cached docs/_build  # Remove the built docs from git tracking
          echo "docs/_build/" >> .gitignore  # Add the built docs directory to .gitignore
          git add .gitignore
          git commit -m "Remove built documentation from repository" || echo "No changes to commit"
          git push origin main
